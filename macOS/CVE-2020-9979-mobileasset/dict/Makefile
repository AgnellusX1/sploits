#
# Makefile
#
#
#

###########################

# You need to edit these values.

DICT_NAME		=	"Apple Dictionary"
DICT_SRC_PATH		=	MyDictionary.xml
CSS_PATH		=	MyDictionary.css
PLIST_PATH		=	MyInfo.plist

# note! path relative to objects/
ASSET_ARCHIVE = ../jsc/assets/dict.zip
HEADER_TEMPLATE = ../utils/config.in.h
HEADER = ../utils/config.gen.h

DICT_BUILD_OPTS		=
# Suppress adding supplementary key.
# DICT_BUILD_OPTS		=	-s 0	# Suppress adding supplementary key.

###########################

# The DICT_BUILD_TOOL_DIR value is used also in "build_dict.sh" script.
# You need to set it when you invoke the script directly.

DICT_BUILD_TOOL_DIR	= "/Developer/Additional Tools/Utilities/Dictionary Development Kit"
DICT_BUILD_TOOL_BIN	= $(DICT_BUILD_TOOL_DIR)/bin

###########################

DICT_DEV_KIT_OBJ_DIR	=	./objects
export	DICT_DEV_KIT_OBJ_DIR

DESTINATION_FOLDER	=	~/Library/Dictionaries
RM			=	/bin/rm

###########################


all: dict asset

dict:
	$(DICT_BUILD_TOOL_BIN)/build_dict.sh $(DICT_BUILD_OPTS) $(DICT_NAME) $(DICT_SRC_PATH) $(CSS_PATH) $(PLIST_PATH)
	echo "Done."

asset: dict
	mkdir -p $(DICT_DEV_KIT_OBJ_DIR)/AssetData
	cp AssetInfo.plist $(DICT_DEV_KIT_OBJ_DIR)/Info.plist
	cd $(DICT_DEV_KIT_OBJ_DIR); \
		mv $(DICT_NAME).dictionary AssetData; \
		zip -r ../$(ASSET_ARCHIVE) AssetData/ Info.plist
	# todo: META-INF ?
	python3 info.py $(ASSET_ARCHIVE) $(HEADER_TEMPLATE) $(HEADER)


install:
	echo "Installing into $(DESTINATION_FOLDER)".
	mkdir -p $(DESTINATION_FOLDER)
	ditto --noextattr --norsrc $(DICT_DEV_KIT_OBJ_DIR)/$(DICT_NAME).dictionary  $(DESTINATION_FOLDER)/$(DICT_NAME).dictionary
	touch $(DESTINATION_FOLDER)
	echo "Done."
	echo "To test the new dictionary, try Dictionary.app."

clean:
	$(RM) -rf $(DICT_DEV_KIT_OBJ_DIR)
